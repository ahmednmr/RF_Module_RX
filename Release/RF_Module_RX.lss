
RF_Module_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000059a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000074  00800060  0000059a  0000062e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  008000d4  008000d4  000006a2  2**0
                  ALLOC
  3 .stab         00000954  00000000  00000000  000006a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000000b4  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000010ac  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e9       	ldi	r30, 0x9A	; 154
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 3d       	cpi	r26, 0xD4	; 212
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a4 ed       	ldi	r26, 0xD4	; 212
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 3d       	cpi	r26, 0xDB	; 219
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 47 02 	call	0x48e	; 0x48e <main>
  8a:	0c 94 cb 02 	jmp	0x596	; 0x596 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <init_UART>:
  92:	82 e0       	ldi	r24, 0x02	; 2
  94:	8b b9       	out	0x0b, r24	; 11
  96:	88 e9       	ldi	r24, 0x98	; 152
  98:	8a b9       	out	0x0a, r24	; 10
  9a:	86 e8       	ldi	r24, 0x86	; 134
  9c:	80 bd       	out	0x20, r24	; 32
  9e:	88 e0       	ldi	r24, 0x08	; 8
  a0:	89 b9       	out	0x09, r24	; 9
  a2:	10 bc       	out	0x20, r1	; 32
  a4:	08 95       	ret

000000a6 <UART_SendChar>:
  a6:	5d 9b       	sbis	0x0b, 5	; 11
  a8:	fe cf       	rjmp	.-4      	; 0xa6 <UART_SendChar>
  aa:	8c b9       	out	0x0c, r24	; 12
  ac:	08 95       	ret

000000ae <UART_getChar>:
  ae:	5f 9b       	sbis	0x0b, 7	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <UART_getChar>
  b2:	8c b1       	in	r24, 0x0c	; 12
  b4:	08 95       	ret

000000b6 <UART_SEND_string>:
  b6:	cf 93       	push	r28
  b8:	df 93       	push	r29
  ba:	ec 01       	movw	r28, r24
  bc:	89 91       	ld	r24, Y+
  be:	88 23       	and	r24, r24
  c0:	19 f0       	breq	.+6      	; 0xc8 <UART_SEND_string+0x12>
  c2:	0e 94 53 00 	call	0xa6	; 0xa6 <UART_SendChar>
  c6:	fa cf       	rjmp	.-12     	; 0xbc <UART_SEND_string+0x6>
  c8:	df 91       	pop	r29
  ca:	cf 91       	pop	r28
  cc:	08 95       	ret

000000ce <UART_SEND_number>:
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	cd b7       	in	r28, 0x3d	; 61
  d4:	de b7       	in	r29, 0x3e	; 62
  d6:	64 97       	sbiw	r28, 0x14	; 20
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	f8 94       	cli
  dc:	de bf       	out	0x3e, r29	; 62
  de:	0f be       	out	0x3f, r0	; 63
  e0:	cd bf       	out	0x3d, r28	; 61
  e2:	4a e0       	ldi	r20, 0x0A	; 10
  e4:	50 e0       	ldi	r21, 0x00	; 0
  e6:	be 01       	movw	r22, r28
  e8:	6f 5f       	subi	r22, 0xFF	; 255
  ea:	7f 4f       	sbci	r23, 0xFF	; 255
  ec:	0e 94 86 02 	call	0x50c	; 0x50c <itoa>
  f0:	ce 01       	movw	r24, r28
  f2:	01 96       	adiw	r24, 0x01	; 1
  f4:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART_SEND_string>
  f8:	64 96       	adiw	r28, 0x14	; 20
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	f8 94       	cli
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0f be       	out	0x3f, r0	; 63
 102:	cd bf       	out	0x3d, r28	; 61
 104:	df 91       	pop	r29
 106:	cf 91       	pop	r28
 108:	08 95       	ret

0000010a <SPI_MasterInit>:
 10a:	80 eb       	ldi	r24, 0xB0	; 176
 10c:	87 bb       	out	0x17, r24	; 23
 10e:	be 98       	cbi	0x17, 6	; 23
 110:	80 e5       	ldi	r24, 0x50	; 80
 112:	8d b9       	out	0x0d, r24	; 13
 114:	68 9a       	sbi	0x0d, 0	; 13
 116:	c4 98       	cbi	0x18, 4	; 24
 118:	08 95       	ret

0000011a <SPI_Transmit>:
 11a:	8f b9       	out	0x0f, r24	; 15
 11c:	77 9b       	sbis	0x0e, 7	; 14
 11e:	fe cf       	rjmp	.-4      	; 0x11c <SPI_Transmit+0x2>
 120:	8f b1       	in	r24, 0x0f	; 15
 122:	08 95       	ret

00000124 <SPI_SlaveInit>:
 124:	80 e4       	ldi	r24, 0x40	; 64
 126:	87 bb       	out	0x17, r24	; 23
 128:	8d b9       	out	0x0d, r24	; 13
 12a:	08 95       	ret

0000012c <nrf24_csn_digitalWrite.part.0>:
 12c:	c4 9a       	sbi	0x18, 4	; 24
 12e:	08 95       	ret

00000130 <init_Nrf24>:
 130:	0e 94 85 00 	call	0x10a	; 0x10a <SPI_MasterInit>
 134:	bb 9a       	sbi	0x17, 3	; 23
 136:	bc 9a       	sbi	0x17, 4	; 23
 138:	c3 98       	cbi	0x18, 3	; 24
 13a:	0c 94 96 00 	jmp	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>

0000013e <nrf24_csn_digitalWrite>:
 13e:	81 11       	cpse	r24, r1
 140:	0c 94 96 00 	jmp	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>
 144:	c4 98       	cbi	0x18, 4	; 24
 146:	08 95       	ret

00000148 <nrf24_configRegister>:
 148:	1f 93       	push	r17
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	1f 92       	push	r1
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
 154:	18 2f       	mov	r17, r24
 156:	80 e0       	ldi	r24, 0x00	; 0
 158:	69 83       	std	Y+1, r22	; 0x01
 15a:	0e 94 9f 00 	call	0x13e	; 0x13e <nrf24_csn_digitalWrite>
 15e:	81 2f       	mov	r24, r17
 160:	8f 71       	andi	r24, 0x1F	; 31
 162:	80 62       	ori	r24, 0x20	; 32
 164:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 168:	69 81       	ldd	r22, Y+1	; 0x01
 16a:	86 2f       	mov	r24, r22
 16c:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 170:	0f 90       	pop	r0
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	1f 91       	pop	r17
 178:	0c 94 96 00 	jmp	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>

0000017c <nrf24_ce_digitalWrite>:
 17c:	88 23       	and	r24, r24
 17e:	11 f0       	breq	.+4      	; 0x184 <nrf24_ce_digitalWrite+0x8>
 180:	c3 9a       	sbi	0x18, 3	; 24
 182:	08 95       	ret
 184:	c3 98       	cbi	0x18, 3	; 24
 186:	08 95       	ret

00000188 <nrf24_powerUpRx>:
 188:	80 e0       	ldi	r24, 0x00	; 0
 18a:	0e 94 9f 00 	call	0x13e	; 0x13e <nrf24_csn_digitalWrite>
 18e:	82 ee       	ldi	r24, 0xE2	; 226
 190:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 194:	0e 94 96 00 	call	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>
 198:	60 e7       	ldi	r22, 0x70	; 112
 19a:	87 e0       	ldi	r24, 0x07	; 7
 19c:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	0e 94 be 00 	call	0x17c	; 0x17c <nrf24_ce_digitalWrite>
 1a6:	6b e0       	ldi	r22, 0x0B	; 11
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1ae:	c3 9a       	sbi	0x18, 3	; 24
 1b0:	08 95       	ret

000001b2 <nrf24_config>:
 1b2:	60 93 d5 00 	sts	0x00D5, r22
 1b6:	68 2f       	mov	r22, r24
 1b8:	85 e0       	ldi	r24, 0x05	; 5
 1ba:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1be:	60 e0       	ldi	r22, 0x00	; 0
 1c0:	81 e1       	ldi	r24, 0x11	; 17
 1c2:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1c6:	60 91 d5 00 	lds	r22, 0x00D5
 1ca:	82 e1       	ldi	r24, 0x12	; 18
 1cc:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1d0:	60 e0       	ldi	r22, 0x00	; 0
 1d2:	83 e1       	ldi	r24, 0x13	; 19
 1d4:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1d8:	60 e0       	ldi	r22, 0x00	; 0
 1da:	84 e1       	ldi	r24, 0x14	; 20
 1dc:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1e0:	60 e0       	ldi	r22, 0x00	; 0
 1e2:	85 e1       	ldi	r24, 0x15	; 21
 1e4:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1e8:	60 e0       	ldi	r22, 0x00	; 0
 1ea:	86 e1       	ldi	r24, 0x16	; 22
 1ec:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1f0:	66 e0       	ldi	r22, 0x06	; 6
 1f2:	86 e0       	ldi	r24, 0x06	; 6
 1f4:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 1f8:	68 e0       	ldi	r22, 0x08	; 8
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 200:	63 e0       	ldi	r22, 0x03	; 3
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 208:	63 e0       	ldi	r22, 0x03	; 3
 20a:	82 e0       	ldi	r24, 0x02	; 2
 20c:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 210:	6f e4       	ldi	r22, 0x4F	; 79
 212:	84 e0       	ldi	r24, 0x04	; 4
 214:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 218:	60 e0       	ldi	r22, 0x00	; 0
 21a:	8c e1       	ldi	r24, 0x1C	; 28
 21c:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 220:	0c 94 c4 00 	jmp	0x188	; 0x188 <nrf24_powerUpRx>

00000224 <nrf24_transmitSync>:
 224:	ef 92       	push	r14
 226:	ff 92       	push	r15
 228:	1f 93       	push	r17
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	1f 92       	push	r1
 230:	cd b7       	in	r28, 0x3d	; 61
 232:	de b7       	in	r29, 0x3e	; 62
 234:	18 2f       	mov	r17, r24
 236:	7c 01       	movw	r14, r24
 238:	8e 2d       	mov	r24, r14
 23a:	81 1b       	sub	r24, r17
 23c:	86 17       	cp	r24, r22
 23e:	40 f4       	brcc	.+16     	; 0x250 <nrf24_transmitSync+0x2c>
 240:	f7 01       	movw	r30, r14
 242:	81 91       	ld	r24, Z+
 244:	7f 01       	movw	r14, r30
 246:	69 83       	std	Y+1, r22	; 0x01
 248:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 24c:	69 81       	ldd	r22, Y+1	; 0x01
 24e:	f4 cf       	rjmp	.-24     	; 0x238 <nrf24_transmitSync+0x14>
 250:	0f 90       	pop	r0
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	1f 91       	pop	r17
 258:	ff 90       	pop	r15
 25a:	ef 90       	pop	r14
 25c:	08 95       	ret

0000025e <nrf24_writeRegister>:
 25e:	ef 92       	push	r14
 260:	ff 92       	push	r15
 262:	1f 93       	push	r17
 264:	cf 93       	push	r28
 266:	df 93       	push	r29
 268:	1f 92       	push	r1
 26a:	cd b7       	in	r28, 0x3d	; 61
 26c:	de b7       	in	r29, 0x3e	; 62
 26e:	18 2f       	mov	r17, r24
 270:	7b 01       	movw	r14, r22
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	49 83       	std	Y+1, r20	; 0x01
 276:	0e 94 9f 00 	call	0x13e	; 0x13e <nrf24_csn_digitalWrite>
 27a:	81 2f       	mov	r24, r17
 27c:	8f 71       	andi	r24, 0x1F	; 31
 27e:	80 62       	ori	r24, 0x20	; 32
 280:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 284:	49 81       	ldd	r20, Y+1	; 0x01
 286:	64 2f       	mov	r22, r20
 288:	c7 01       	movw	r24, r14
 28a:	0e 94 12 01 	call	0x224	; 0x224 <nrf24_transmitSync>
 28e:	0f 90       	pop	r0
 290:	df 91       	pop	r29
 292:	cf 91       	pop	r28
 294:	1f 91       	pop	r17
 296:	ff 90       	pop	r15
 298:	ef 90       	pop	r14
 29a:	0c 94 96 00 	jmp	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>

0000029e <nrf24_tx_address>:
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	ec 01       	movw	r28, r24
 2a4:	45 e0       	ldi	r20, 0x05	; 5
 2a6:	bc 01       	movw	r22, r24
 2a8:	8a e0       	ldi	r24, 0x0A	; 10
 2aa:	0e 94 2f 01 	call	0x25e	; 0x25e <nrf24_writeRegister>
 2ae:	45 e0       	ldi	r20, 0x05	; 5
 2b0:	be 01       	movw	r22, r28
 2b2:	80 e1       	ldi	r24, 0x10	; 16
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	0c 94 2f 01 	jmp	0x25e	; 0x25e <nrf24_writeRegister>

000002bc <nrf24_transferSync>:
 2bc:	cf 92       	push	r12
 2be:	df 92       	push	r13
 2c0:	ff 92       	push	r15
 2c2:	0f 93       	push	r16
 2c4:	1f 93       	push	r17
 2c6:	cf 93       	push	r28
 2c8:	df 93       	push	r29
 2ca:	1f 92       	push	r1
 2cc:	cd b7       	in	r28, 0x3d	; 61
 2ce:	de b7       	in	r29, 0x3e	; 62
 2d0:	f8 2e       	mov	r15, r24
 2d2:	8b 01       	movw	r16, r22
 2d4:	6c 01       	movw	r12, r24
 2d6:	8c 2d       	mov	r24, r12
 2d8:	8f 19       	sub	r24, r15
 2da:	84 17       	cp	r24, r20
 2dc:	58 f4       	brcc	.+22     	; 0x2f4 <nrf24_transferSync+0x38>
 2de:	f6 01       	movw	r30, r12
 2e0:	81 91       	ld	r24, Z+
 2e2:	6f 01       	movw	r12, r30
 2e4:	49 83       	std	Y+1, r20	; 0x01
 2e6:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 2ea:	f8 01       	movw	r30, r16
 2ec:	81 93       	st	Z+, r24
 2ee:	8f 01       	movw	r16, r30
 2f0:	49 81       	ldd	r20, Y+1	; 0x01
 2f2:	f1 cf       	rjmp	.-30     	; 0x2d6 <nrf24_transferSync+0x1a>
 2f4:	0f 90       	pop	r0
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	1f 91       	pop	r17
 2fc:	0f 91       	pop	r16
 2fe:	ff 90       	pop	r15
 300:	df 90       	pop	r13
 302:	cf 90       	pop	r12
 304:	08 95       	ret

00000306 <nrf24_rx_address>:
 306:	45 e0       	ldi	r20, 0x05	; 5
 308:	bc 01       	movw	r22, r24
 30a:	8b e0       	ldi	r24, 0x0B	; 11
 30c:	0c 94 2f 01 	jmp	0x25e	; 0x25e <nrf24_writeRegister>

00000310 <nrf24_powerUpTx>:
 310:	60 e7       	ldi	r22, 0x70	; 112
 312:	87 e0       	ldi	r24, 0x07	; 7
 314:	0e 94 a4 00 	call	0x148	; 0x148 <nrf24_configRegister>
 318:	6a e0       	ldi	r22, 0x0A	; 10
 31a:	80 e0       	ldi	r24, 0x00	; 0
 31c:	0c 94 a4 00 	jmp	0x148	; 0x148 <nrf24_configRegister>

00000320 <nrf24_send>:
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	ec 01       	movw	r28, r24
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	0e 94 be 00 	call	0x17c	; 0x17c <nrf24_ce_digitalWrite>
 32c:	0e 94 88 01 	call	0x310	; 0x310 <nrf24_powerUpTx>
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	0e 94 9f 00 	call	0x13e	; 0x13e <nrf24_csn_digitalWrite>
 336:	81 ee       	ldi	r24, 0xE1	; 225
 338:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 33c:	0e 94 96 00 	call	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	0e 94 9f 00 	call	0x13e	; 0x13e <nrf24_csn_digitalWrite>
 346:	80 ea       	ldi	r24, 0xA0	; 160
 348:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 34c:	60 91 d5 00 	lds	r22, 0x00D5
 350:	ce 01       	movw	r24, r28
 352:	0e 94 12 01 	call	0x224	; 0x224 <nrf24_transmitSync>
 356:	0e 94 96 00 	call	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>
 35a:	c3 9a       	sbi	0x18, 3	; 24
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
 360:	08 95       	ret

00000362 <nrf24_getStatus>:
 362:	cf 93       	push	r28
 364:	df 93       	push	r29
 366:	1f 92       	push	r1
 368:	cd b7       	in	r28, 0x3d	; 61
 36a:	de b7       	in	r29, 0x3e	; 62
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	0e 94 9f 00 	call	0x13e	; 0x13e <nrf24_csn_digitalWrite>
 372:	8f ef       	ldi	r24, 0xFF	; 255
 374:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 378:	89 83       	std	Y+1, r24	; 0x01
 37a:	0e 94 96 00 	call	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>
 37e:	89 81       	ldd	r24, Y+1	; 0x01
 380:	0f 90       	pop	r0
 382:	df 91       	pop	r29
 384:	cf 91       	pop	r28
 386:	08 95       	ret

00000388 <nrf24_isSending>:
 388:	0e 94 b1 01 	call	0x362	; 0x362 <nrf24_getStatus>
 38c:	98 2f       	mov	r25, r24
 38e:	90 73       	andi	r25, 0x30	; 48
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	09 f0       	breq	.+2      	; 0x396 <nrf24_isSending+0xe>
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	08 95       	ret

00000398 <nrf24_lastMessageStatus>:
 398:	0e 94 b1 01 	call	0x362	; 0x362 <nrf24_getStatus>
 39c:	85 fd       	sbrc	r24, 5
 39e:	04 c0       	rjmp	.+8      	; 0x3a8 <nrf24_lastMessageStatus+0x10>
 3a0:	84 ff       	sbrs	r24, 4
 3a2:	04 c0       	rjmp	.+8      	; 0x3ac <nrf24_lastMessageStatus+0x14>
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	08 95       	ret
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	08 95       	ret
 3ac:	8f ef       	ldi	r24, 0xFF	; 255
 3ae:	08 95       	ret

000003b0 <nrf24_readRegister>:
 3b0:	ef 92       	push	r14
 3b2:	ff 92       	push	r15
 3b4:	1f 93       	push	r17
 3b6:	cf 93       	push	r28
 3b8:	df 93       	push	r29
 3ba:	1f 92       	push	r1
 3bc:	cd b7       	in	r28, 0x3d	; 61
 3be:	de b7       	in	r29, 0x3e	; 62
 3c0:	18 2f       	mov	r17, r24
 3c2:	7b 01       	movw	r14, r22
 3c4:	80 e0       	ldi	r24, 0x00	; 0
 3c6:	49 83       	std	Y+1, r20	; 0x01
 3c8:	0e 94 9f 00 	call	0x13e	; 0x13e <nrf24_csn_digitalWrite>
 3cc:	81 2f       	mov	r24, r17
 3ce:	8f 71       	andi	r24, 0x1F	; 31
 3d0:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 3d4:	49 81       	ldd	r20, Y+1	; 0x01
 3d6:	b7 01       	movw	r22, r14
 3d8:	c7 01       	movw	r24, r14
 3da:	0e 94 5e 01 	call	0x2bc	; 0x2bc <nrf24_transferSync>
 3de:	0f 90       	pop	r0
 3e0:	df 91       	pop	r29
 3e2:	cf 91       	pop	r28
 3e4:	1f 91       	pop	r17
 3e6:	ff 90       	pop	r15
 3e8:	ef 90       	pop	r14
 3ea:	0c 94 96 00 	jmp	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>

000003ee <nrf24_retransmissionCount>:
 3ee:	cf 93       	push	r28
 3f0:	df 93       	push	r29
 3f2:	1f 92       	push	r1
 3f4:	cd b7       	in	r28, 0x3d	; 61
 3f6:	de b7       	in	r29, 0x3e	; 62
 3f8:	41 e0       	ldi	r20, 0x01	; 1
 3fa:	be 01       	movw	r22, r28
 3fc:	6f 5f       	subi	r22, 0xFF	; 255
 3fe:	7f 4f       	sbci	r23, 0xFF	; 255
 400:	88 e0       	ldi	r24, 0x08	; 8
 402:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <nrf24_readRegister>
 406:	89 81       	ldd	r24, Y+1	; 0x01
 408:	8f 70       	andi	r24, 0x0F	; 15
 40a:	0f 90       	pop	r0
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	08 95       	ret

00000412 <nrf24_powerDown>:
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	0e 94 be 00 	call	0x17c	; 0x17c <nrf24_ce_digitalWrite>
 418:	68 e0       	ldi	r22, 0x08	; 8
 41a:	80 e0       	ldi	r24, 0x00	; 0
 41c:	0c 94 a4 00 	jmp	0x148	; 0x148 <nrf24_configRegister>

00000420 <nrf24_getData>:
 420:	cf 93       	push	r28
 422:	df 93       	push	r29
 424:	ec 01       	movw	r28, r24
 426:	80 e0       	ldi	r24, 0x00	; 0
 428:	0e 94 9f 00 	call	0x13e	; 0x13e <nrf24_csn_digitalWrite>
 42c:	81 e6       	ldi	r24, 0x61	; 97
 42e:	0e 94 8d 00 	call	0x11a	; 0x11a <SPI_Transmit>
 432:	40 91 d5 00 	lds	r20, 0x00D5
 436:	be 01       	movw	r22, r28
 438:	ce 01       	movw	r24, r28
 43a:	0e 94 5e 01 	call	0x2bc	; 0x2bc <nrf24_transferSync>
 43e:	0e 94 96 00 	call	0x12c	; 0x12c <nrf24_csn_digitalWrite.part.0>
 442:	60 e4       	ldi	r22, 0x40	; 64
 444:	87 e0       	ldi	r24, 0x07	; 7
 446:	df 91       	pop	r29
 448:	cf 91       	pop	r28
 44a:	0c 94 a4 00 	jmp	0x148	; 0x148 <nrf24_configRegister>

0000044e <nrf24_rxFifoEmpty>:
 44e:	cf 93       	push	r28
 450:	df 93       	push	r29
 452:	1f 92       	push	r1
 454:	cd b7       	in	r28, 0x3d	; 61
 456:	de b7       	in	r29, 0x3e	; 62
 458:	41 e0       	ldi	r20, 0x01	; 1
 45a:	be 01       	movw	r22, r28
 45c:	6f 5f       	subi	r22, 0xFF	; 255
 45e:	7f 4f       	sbci	r23, 0xFF	; 255
 460:	87 e1       	ldi	r24, 0x17	; 23
 462:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <nrf24_readRegister>
 466:	89 81       	ldd	r24, Y+1	; 0x01
 468:	81 70       	andi	r24, 0x01	; 1
 46a:	0f 90       	pop	r0
 46c:	df 91       	pop	r29
 46e:	cf 91       	pop	r28
 470:	08 95       	ret

00000472 <nrf24_dataReady>:
 472:	0e 94 b1 01 	call	0x362	; 0x362 <nrf24_getStatus>
 476:	86 fd       	sbrc	r24, 6
 478:	07 c0       	rjmp	.+14     	; 0x488 <nrf24_dataReady+0x16>
 47a:	0e 94 27 02 	call	0x44e	; 0x44e <nrf24_rxFifoEmpty>
 47e:	91 e0       	ldi	r25, 0x01	; 1
 480:	88 23       	and	r24, r24
 482:	19 f0       	breq	.+6      	; 0x48a <nrf24_dataReady+0x18>
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	01 c0       	rjmp	.+2      	; 0x48a <nrf24_dataReady+0x18>
 488:	91 e0       	ldi	r25, 0x01	; 1
 48a:	89 2f       	mov	r24, r25
 48c:	08 95       	ret

0000048e <main>:
 48e:	0e 94 49 00 	call	0x92	; 0x92 <init_UART>
 492:	8a e6       	ldi	r24, 0x6A	; 106
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART_SEND_string>
 49a:	0e 94 98 00 	call	0x130	; 0x130 <init_Nrf24>
 49e:	8c e7       	ldi	r24, 0x7C	; 124
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART_SEND_string>
 4a6:	64 e0       	ldi	r22, 0x04	; 4
 4a8:	82 e0       	ldi	r24, 0x02	; 2
 4aa:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <nrf24_config>
 4ae:	8f e8       	ldi	r24, 0x8F	; 143
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART_SEND_string>
 4b6:	85 e6       	ldi	r24, 0x65	; 101
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	0e 94 4f 01 	call	0x29e	; 0x29e <nrf24_tx_address>
 4be:	80 e6       	ldi	r24, 0x60	; 96
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	0e 94 83 01 	call	0x306	; 0x306 <nrf24_rx_address>
 4c6:	86 ea       	ldi	r24, 0xA6	; 166
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART_SEND_string>
 4ce:	0e 94 39 02 	call	0x472	; 0x472 <nrf24_dataReady>
 4d2:	88 23       	and	r24, r24
 4d4:	e1 f3       	breq	.-8      	; 0x4ce <main+0x40>
 4d6:	87 ed       	ldi	r24, 0xD7	; 215
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	0e 94 10 02 	call	0x420	; 0x420 <nrf24_getData>
 4de:	86 eb       	ldi	r24, 0xB6	; 182
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	0e 94 5b 00 	call	0xb6	; 0xb6 <UART_SEND_string>
 4e6:	80 91 d7 00 	lds	r24, 0x00D7
 4ea:	0e 94 53 00 	call	0xa6	; 0xa6 <UART_SendChar>
 4ee:	80 91 d8 00 	lds	r24, 0x00D8
 4f2:	0e 94 53 00 	call	0xa6	; 0xa6 <UART_SendChar>
 4f6:	80 91 d9 00 	lds	r24, 0x00D9
 4fa:	0e 94 53 00 	call	0xa6	; 0xa6 <UART_SendChar>
 4fe:	80 91 da 00 	lds	r24, 0x00DA
 502:	0e 94 53 00 	call	0xa6	; 0xa6 <UART_SendChar>
 506:	8e ec       	ldi	r24, 0xCE	; 206
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	df cf       	rjmp	.-66     	; 0x4ca <main+0x3c>

0000050c <itoa>:
 50c:	fb 01       	movw	r30, r22
 50e:	9f 01       	movw	r18, r30
 510:	e8 94       	clt
 512:	42 30       	cpi	r20, 0x02	; 2
 514:	c4 f0       	brlt	.+48     	; 0x546 <itoa+0x3a>
 516:	45 32       	cpi	r20, 0x25	; 37
 518:	b4 f4       	brge	.+44     	; 0x546 <itoa+0x3a>
 51a:	4a 30       	cpi	r20, 0x0A	; 10
 51c:	29 f4       	brne	.+10     	; 0x528 <itoa+0x1c>
 51e:	97 fb       	bst	r25, 7
 520:	1e f4       	brtc	.+6      	; 0x528 <itoa+0x1c>
 522:	90 95       	com	r25
 524:	81 95       	neg	r24
 526:	9f 4f       	sbci	r25, 0xFF	; 255
 528:	64 2f       	mov	r22, r20
 52a:	77 27       	eor	r23, r23
 52c:	0e 94 b7 02 	call	0x56e	; 0x56e <__udivmodhi4>
 530:	80 5d       	subi	r24, 0xD0	; 208
 532:	8a 33       	cpi	r24, 0x3A	; 58
 534:	0c f0       	brlt	.+2      	; 0x538 <itoa+0x2c>
 536:	89 5d       	subi	r24, 0xD9	; 217
 538:	81 93       	st	Z+, r24
 53a:	cb 01       	movw	r24, r22
 53c:	00 97       	sbiw	r24, 0x00	; 0
 53e:	a1 f7       	brne	.-24     	; 0x528 <itoa+0x1c>
 540:	16 f4       	brtc	.+4      	; 0x546 <itoa+0x3a>
 542:	5d e2       	ldi	r21, 0x2D	; 45
 544:	51 93       	st	Z+, r21
 546:	10 82       	st	Z, r1
 548:	c9 01       	movw	r24, r18
 54a:	0c 94 a7 02 	jmp	0x54e	; 0x54e <strrev>

0000054e <strrev>:
 54e:	dc 01       	movw	r26, r24
 550:	fc 01       	movw	r30, r24
 552:	67 2f       	mov	r22, r23
 554:	71 91       	ld	r23, Z+
 556:	77 23       	and	r23, r23
 558:	e1 f7       	brne	.-8      	; 0x552 <strrev+0x4>
 55a:	32 97       	sbiw	r30, 0x02	; 2
 55c:	04 c0       	rjmp	.+8      	; 0x566 <strrev+0x18>
 55e:	7c 91       	ld	r23, X
 560:	6d 93       	st	X+, r22
 562:	70 83       	st	Z, r23
 564:	62 91       	ld	r22, -Z
 566:	ae 17       	cp	r26, r30
 568:	bf 07       	cpc	r27, r31
 56a:	c8 f3       	brcs	.-14     	; 0x55e <strrev+0x10>
 56c:	08 95       	ret

0000056e <__udivmodhi4>:
 56e:	aa 1b       	sub	r26, r26
 570:	bb 1b       	sub	r27, r27
 572:	51 e1       	ldi	r21, 0x11	; 17
 574:	07 c0       	rjmp	.+14     	; 0x584 <__udivmodhi4_ep>

00000576 <__udivmodhi4_loop>:
 576:	aa 1f       	adc	r26, r26
 578:	bb 1f       	adc	r27, r27
 57a:	a6 17       	cp	r26, r22
 57c:	b7 07       	cpc	r27, r23
 57e:	10 f0       	brcs	.+4      	; 0x584 <__udivmodhi4_ep>
 580:	a6 1b       	sub	r26, r22
 582:	b7 0b       	sbc	r27, r23

00000584 <__udivmodhi4_ep>:
 584:	88 1f       	adc	r24, r24
 586:	99 1f       	adc	r25, r25
 588:	5a 95       	dec	r21
 58a:	a9 f7       	brne	.-22     	; 0x576 <__udivmodhi4_loop>
 58c:	80 95       	com	r24
 58e:	90 95       	com	r25
 590:	bc 01       	movw	r22, r24
 592:	cd 01       	movw	r24, r26
 594:	08 95       	ret

00000596 <_exit>:
 596:	f8 94       	cli

00000598 <__stop_program>:
 598:	ff cf       	rjmp	.-2      	; 0x598 <__stop_program>
